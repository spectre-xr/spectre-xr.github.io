"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6773],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=o,u=p["".concat(s,".").concat(h)]||p[h]||g[h]||a;return n?i.createElement(u,r(r({ref:t},d),{},{components:n})):i.createElement(u,r({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,r[1]=l;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const a={sidebar_position:8},r="Input Confidence Trigger",l={unversionedId:"input/input-confidence-trigger",id:"input/input-confidence-trigger",title:"Input Confidence Trigger",description:"This script acts as a trigger for input confidence level getting above or below certain threshold",source:"@site/docs/input/input-confidence-trigger.md",sourceDirName:"input",slug:"/input/input-confidence-trigger",permalink:"/docs/input/input-confidence-trigger",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/input/input-confidence-trigger.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Multi Source Input Data Provider",permalink:"/docs/input/multi-source-input-data-provider"},next:{title:"Hand Skeleton",permalink:"/docs/input/hand-skeleton"}},s={},c=[{value:"Public properties",id:"public-properties",level:3},{value:"Protected methods",id:"protected-methods",level:3},{value:"Input Confidence Based Component Toggler",id:"input-confidence-based-component-toggler",level:3},{value:"Input Confidence Based GameObject Toggler",id:"input-confidence-based-gameobject-toggler",level:3},{value:"Input Confidence Based Hand Skeleton Toggler",id:"input-confidence-based-hand-skeleton-toggler",level:3}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"input-confidence-trigger"},"Input Confidence Trigger"),(0,o.kt)("p",null,"This script acts as a trigger for input confidence level getting above or below certain threshold\nIt reads the confidence level (the value of Confidence property) from an InputDataProvider which is assigned to it and whenever that value crosses certain threshold value, which is also assigned, it sends out the appropriate event - one for confidence level crossing above threshold and one for confidence level crossing bellow threshold"),(0,o.kt)("p",null,"It has a number of overridable callback methods related to that functionality as well, so behaviours inheriting from it can implement their own specific confidence level based logic"),(0,o.kt)("h3",{id:"public-properties"},"Public properties"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"InputDataProvider InputDataProvider { get; set; }\n")),(0,o.kt)("p",null,"InputDataProvider whose confidence level is base for the trigger. This can be null, but note that in that case InputConfidenceTrigger is going to act as if the confidence level is 0, so event for low confidence level might get sent after null has been assigned\nVisible and assignable in the InputConfidenceTrigger's inspector panel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"float ConfidenceThreshold { get; set; }\n")),(0,o.kt)("p",null,"Threshold confidence level for trigger. If the InputDataProvider's confidence level gets above this threshold or is equal to it then high confidence logic is triggered, if it gets below then low confidence logic is triggered\nVisible and editable in the InputConfidenceTrigger's inspector panel. Note that using the inspector only values ranging from 0 to 1 (inclusive) can be assigned, but from code any value is valid "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"bool IsConfidenceLowTriggered { get; }\n")),(0,o.kt)("p",null,"Specifies whether the low confidence logic has been triggered and is active at the moment. This is not neccessarily opposite of IsConfidenceHighTriggered, in some circumstances both properties can be false, but they are never both true"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"bool IsConfidenceHighTriggered { get; }\n")),(0,o.kt)("p",null,"Same as IsConfidenceLowTriggered, but obviously this one is for high confidence logic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"UnityEvent OnConfidenceLow { get; }\n")),(0,o.kt)("p",null,"Event sent when low confidence logic is triggered. Visible in the inspector"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"UnityEvent OnConfidenceHigh { get; }\n")),(0,o.kt)("p",null,"Event sent when high confidence logic is triggered. Visible in the inspector"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"InputConfidenceTriggerEvaluationRun TriggerEvaluationRun { get; set; }\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Specifies when the InputConfidenceTrigger evaluates confidence level from its InputDataProvider. Possible values are Update, FixedUpdate and both. Depending on this, confidence low/high logic is triggered either from Update method or FixedUpdate or both"),(0,o.kt)("li",{parentName:"ul"},"Visible and editable in the inspector panel")),(0,o.kt)("h3",{id:"protected-methods"},"Protected methods"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"virtual void HandleConfidenceLow()\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Callback method that can be overriden by derived classes in order to be notified about confidence level changing from high to low. This is called just before the OnConfidenceLow event is sent")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"virtual void HandleConfidenceHigh()\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Callback method that can be overriden by derived classes in order to be notified about confidence level changing from low to high. This is called just before the OnConfidenceHigh event is sent")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"virtual void UpdateConfidenceLow()\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Callback method that gets called during low confidence logic. Unlike the HandleConfidenceLow method that gets called only when confidence level crosses from high to low, this method is called every frame as long as the confidence level is below threshold (low). It gets called from Update or FixedUpdate or both methods, depending on the TriggerEvaluationRun value. It is called in the same frames as HandleConfidenceLow as well")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"virtual void UpdateConfidenceHigh()\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Callback method that gets called during high confidence logic. Unlike the HandleConfidenceHigh method that gets called only when confidence level crosses from low to high, this method is called every frame as long as the confidence level is above threshold (high). It gets called from Update or FixedUpdate or both methods, depending on the TriggerEvaluationRun value. It is called in the same frames as HandleConfidenceHigh as well\nThere are several scripts included in OctoXR that derive from InputConfidenceTrigger to provide more specialized confidence level based behaviours which can be used in some common scenarios.\nThe following sections briefly describe those behaviours.")),(0,o.kt)("h3",{id:"input-confidence-based-component-toggler"},"Input Confidence Based Component Toggler"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Input confidence trigger that toggles, i.e. enables or disables components based on whether the input data confidence value is below or above the desired threshold defined in the input confidence trigger"),(0,o.kt)("li",{parentName:"ul"},"Target components to toggle can be assigned in the inspector panel of the InputConfidenceBasedComponentToggler, they can also be added/removed in code at any time"),(0,o.kt)("li",{parentName:"ul"},"The exact type of references that can be assigned is UnityEngine.Component, but the component toggler can only toggle the ones that inherit from UnityEngine.Behaviour or UnityEngine.Renderer since they are the ones that have 'enabled' property defined. Component toggler will not perform any action on the ones not derived from either of those two types"),(0,o.kt)("li",{parentName:"ul"},"For each component assigned there is an option that can be set (checked or unchecked in the inspector or have a true/false value assigned in code) which specifies whether the corresponding component should be enabled when confidence level is high and disabled when it is low or the other way around - disabled when confidence level is high and enabled when it is low")),(0,o.kt)("h3",{id:"input-confidence-based-gameobject-toggler"},"Input Confidence Based GameObject Toggler"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This script is basically the equivalent of InputConfidenceBasedComponentToggler described above, but for GameObjects"),(0,o.kt)("li",{parentName:"ul"},"It activates/deactivates assigned GameObjects based on confidence level of the associated input data provider and offers the same options for each assigned GameObject as does the InputConfidenceBasedComponentToggler for each of its components")),(0,o.kt)("h3",{id:"input-confidence-based-hand-skeleton-toggler"},"Input Confidence Based Hand Skeleton Toggler"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This toggler is to a certain extent a combination of the previous two, except it is specialized to toggle one or more HandSkeletons"),(0,o.kt)("li",{parentName:"ul"},"Each HandSkeleton assigned can be toggled in two ways and it is also possible to specify which part of it should be toggled. Parts that can be toggled are the HandSkeleton itself or its bones (HandBones assigned to it) and ways to toggle them are either by enabling/disabling components (HandSkeleton script/HandBone scripts) or by activating/deactivating the GameObjects they are attached to"),(0,o.kt)("li",{parentName:"ul"},"The functionality this particular toggler script provides can likely be achieved with either of the previously described ones, but it does offer slightly more options than those two and it can be easier to configure in order to achieve the exact desired behaviour when HandSkeletons are involved")))}p.isMDXComponent=!0}}]);