"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2867],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=p(n),h=a,m=l["".concat(c,".").concat(h)]||l[h]||u[h]||r;return n?o.createElement(m,s(s({ref:t},d),{},{components:n})):o.createElement(m,s({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[l]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},635:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1},s="How To Use",i={unversionedId:"hand-pose-detection/how-to-use",id:"hand-pose-detection/how-to-use",title:"How To Use",description:"Setting Up",source:"@site/docs/hand-pose-detection/how-to-use.md",sourceDirName:"hand-pose-detection",slug:"/hand-pose-detection/how-to-use",permalink:"/docs/hand-pose-detection/how-to-use",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/hand-pose-detection/how-to-use.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Hand Pose Detection",permalink:"/docs/category/hand-pose-detection"},next:{title:"Scripting",permalink:"/docs/category/scripting"}},c={},p=[{value:"Setting Up",id:"setting-up",level:3},{value:"Creating Hand Shapes",id:"creating-hand-shapes",level:3}],d={toc:p};function l(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-use"},"How To Use"),(0,a.kt)("h3",{id:"setting-up"},"Setting Up"),(0,a.kt)("p",null,"Drag and drop OctoHand_Left and OctoHand_Right in the scene."),(0,a.kt)("p",null,"Reference (for Oculus) OVRCameraRig to InputRoot of MultiSourceInputDataProvider for each hand."),(0,a.kt)("p",null,'Create an empty game object and name it "Left Hand Poses". Add HandPoseHandRef component and reference left hand skeleton. Leave hand poses array empty for now.'),(0,a.kt)("p",null,'Creaty an empty game object as a child of "Left Hand Poses" and name it "Thumbs Up".'),(0,a.kt)("p",null,'Add HandPoseShape component to "Thumbs Up" game object. Define your shape by dragging HandShape scriptable objects in Shapes array. HandShape scriptable objects are at Assets/OctoXR/Core/ScriptableObjects/HandPoseDetection.'),(0,a.kt)("p",null,"Thumbs Up hand shape is defined by thumb in extension and all other fingers in flexion."),(0,a.kt)("p",null,'Add HandPoseOrientation component to "Thumbs Up" game object. Set orientation mode to:\nPalm Back, Palm Right, Fingers Forward and Fingers Right.'),(0,a.kt)("p",null,'Add HandPose component to "Thumbs Up" game object. Reference some test function to OnPoseDetected event.'),(0,a.kt)("p",null,'Go back to HandPoseHandRef component that is attached to "Left Hand Poses" game object and reference "Thumbs Up" game object to Hand poses array.'),(0,a.kt)("p",null,"Your Thumbs Up pose should look something like this:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Thumbs up pose",src:n(6062).Z,width:"401",height:"847"})),(0,a.kt)("h3",{id:"creating-hand-shapes"},"Creating Hand Shapes"),(0,a.kt)("p",null,'Create an empty game object and name it "Shape Creator". Attach HandShapeCreator component.'),(0,a.kt)("p",null,"Reference a hand skeleton component (it's irrelevant if it's right hand or left hand skeleton because hand shapes are interchangeable for both hands). Right click somewhere in the assets folder and create a HandShape (Create/OctoXR/HandShape). Reference that hand shape in the the target pose property of shape creator. In the Hand Bones dropdown select which bones would you like to create your shape for."),(0,a.kt)("p",null,"Enter play mode, show your shape with the hand (same hand you referenced your hand skeleton) and click Create Shape button."))}l.isMDXComponent=!0},6062:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/thumbsuppose-d3a69ca8689457500d17eef99c154b23.jpg"}}]);